---
import { AstroSeo } from "@astrolib/seo";
import "@fontsource-variable/inter";
import { getLangFromUrl, getLocalizedUrl } from "../i18n/utils";
import { languages } from "../i18n/ui";
import { SITE_URL } from "../utils/constants";

const { title, description, blockCanonical = false } = Astro.props;

const lang = getLangFromUrl(Astro.url);
const transformedSiteURL = `${SITE_URL}${getLocalizedUrl(lang)}`;
const languageAlternates = Object.keys(languages).map((hrefLang) => ({
	hrefLang,
	href: `${SITE_URL}${getLocalizedUrl(hrefLang)}`,
}));
---

<!doctype html>
<html lang={lang} class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="generator" content={Astro.generator} />
		<link rel="icon" href="/favicon.ico" sizes="any" />
		<link rel="sitemap" href="/sitemap-index.xml" />
	</head>
	<body>
		<AstroSeo
			title={title}
			description={description}
			canonical={!blockCanonical && transformedSiteURL}
			languageAlternates={languageAlternates}
			noindex={false}
			nofollow={false}
			openGraph={{
				locale: lang,
				url: transformedSiteURL,
				site_name: "Matías Medina - React Developer",
				images: [
					{
						url: `${SITE_URL}/profile-pic.webp`,
						width: 800,
						height: 600,
						alt: "Matías Medina - React Developer",
					},
				],
				type: "profile",
				profile: {
					firstName: "Matías",
					lastName: "Medina",
					username: "matiasm",
					gender: "male",
				},
			}}
			additionalMetaTags={[
				{
					name: "author",
					content: "Matías Medina",
				},
			]}
		/>
		<slot />
		<script src="/taos.min.js" is:inline defer></script>
	</body>
</html>

<style is:global>
	:root {
	}
	html {
		background: #040c0d;
		color: #b0c7cb;
		font-size: 16px;
	}
</style>
