---
import { ui } from "../i18n/ui";
import { getLangFromUrl, useTranslations } from "../i18n/utils";
import SectionTitle from "./SectionTitle.astro";

const ICON_CONTAINER_BASE_STYLES =
    "flex justify-center items-center size-12 min-w-12 rounded-2xl ";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const techList = ui[lang]["technologies.list"];

const TECH_LIST = [
    {
        name: "React",
        classStyles: "bg-black",
        subtitle: techList.find(t => t.name === "React").subtitle,
        description: techList.find(t => t.name === "React").description,
        iconRoute: `/react-icon.svg`,
    },
    {
        name: "Next.js",
        classStyles: "bg-[#D9D9D9]",
        subtitle: techList.find(t => t.name === "Next.js").subtitle,
        description: techList.find(t => t.name === "Next.js").description,
        iconRoute: `/nextjs-icon.svg`,
    },
    {
        name: "GraphQL",
        classStyles: "bg-gradient-to-t from-[#1B0514] to-[#37162C]",
        subtitle: techList.find(t => t.name === "GraphQL").subtitle,
        description: techList.find(t => t.name === "GraphQL").description,
        iconRoute: `/graphql-icon.svg`,
    },
    {
        name: "Tailwind CSS",
        classStyles: "bg-[#fff]",
        subtitle: techList.find(t => t.name === "Tailwind CSS").subtitle,
        description: techList.find(t => t.name === "Tailwind CSS").description,
        iconRoute: `/tailwind-icon.svg`,
    },
    {
        name: "TypeScript",
        classStyles: "bg-[#007ACC]",
        subtitle: techList.find(t => t.name === "TypeScript").subtitle,
        description: techList.find(t => t.name === "TypeScript").description,
        iconRoute: `/typescript-icon.svg`,
    },
    {
        name: "Storybook",
        classStyles: "bg-[#fff]",
        subtitle: techList.find(t => t.name === "Storybook").subtitle,
        description: techList.find(t => t.name === "Storybook").description,
        iconRoute: `/storybook-icon.svg`,
    },
    {
        name: "Jest",
        classStyles: "bg-gradient-to-t from-[#461A20] to-[#77343E]",
        subtitle: techList.find(t => t.name === "Jest").subtitle,
        description: techList.find(t => t.name === "Jest").description,
        iconRoute: `/jest-icon.svg`,
    },
    {
        name: "React Testing Library",
        classStyles: "bg-gradient-to-t from-[#741618] to-[#A92321]",
        subtitle: techList.find(t => t.name === "React Testing Library").subtitle,
        description: techList.find(t => t.name === "React Testing Library").description,
        iconRoute: `/testinglibrary-icon.svg`,
    },
];
---

<section
    id="technologies"
    class="relative max-w-5xl mx-auto mt-28 scroll-mt-8 md:mt-44"
>
    <SectionTitle center prefix={t("technologies.prefix")} title={t("technologies.title")} />
    <div
        class="flex items-center flex-col bg-slate-900 m-auto rounded-3xl px-2 mt-4"
    >
        <div class="flex overflow-x-scroll hide-scroll-bar w-full py-2.5">
            <div class="flex flex-nowrap m-auto">
                {
                    TECH_LIST.map((tech, idx) => (
                        <div
                            class="relative inline-block mx-[5px] md:mx-3 cursor-pointer my-1"
                            data-tech={JSON.stringify(tech)}
                        >
                            <div
                                data-icon-container
                                class={`flex justify-center items-center size-16 overflow-hidden rounded-2xl duration-300 ease-in-out transition-all shadow-[0_0_5px_1px_rgba(0,0,0,0)]  ${tech.classStyles}`}
                            >
                                <img
                                    class="size-[85%]"
                                    alt={`${tech.name} logo`}
                                    src={tech.iconRoute}
                                    loading="lazy"
                                />
                            </div>
                            <div
                                data-circle-active-indicator
                                class={`${idx === 0 ? "absolute" : "hidden"} -bottom-[12px] left-0 right-0 size-1.5 bg-blue-600 rounded-full mx-auto`}
                            />
                        </div>
                    ))
                }
            </div>
        </div>
    </div>
    <div
        class="flex flex-col gap-6 items-center p-4 bg-slate-900 mt-4 rounded-3xl border border-blue-600 border-opacity-20 sm:gap-6 sm:text-left sm:flex-row sm:items-center"
    >
        <div
            class="flex flex-row items-center justify-start w-full bg-gradient-to-br from-blue-600 to-slate-900 rounded-2xl p-4 gap-2 sm:justify-center sm:flex-col sm:items-start sm:text-left sm:min-w-48 sm:min-h-44 sm:max-w-48"
        >
            <div
                id="tech-info-left-container"
                data-base-styles={ICON_CONTAINER_BASE_STYLES}
                class={`${ICON_CONTAINER_BASE_STYLES} ${TECH_LIST[0].classStyles}`}
            >
                <img
                    id="details-icon"
                    class="size-[75%]"
                    alt={`${TECH_LIST[0].name} logo`}
                    src={TECH_LIST[0].iconRoute}
                    loading="lazy"
                />
            </div>
            <p
                id="tech-info-subtitle"
                class="text-blue-100 text-base font-normal text-pretty"
            >
                {TECH_LIST[0].subtitle}
            </p>
        </div>
        <div class="flex flex-col md justify-center margin-auto gap-2">
            <p id="tech-info-title" class="text-2xl text-blue-50 font-semibold">
                {TECH_LIST[0].name}
            </p>
            <p
                id="tech-info-description"
                class="text-base text-pretty text-blue-300 sm:text-lg"
            >
                {TECH_LIST[0].description}
            </p>
        </div>
    </div>
    <div
        class="absolute -z-10 top-0 right-0 left-0 mx-auto size-[540px] filter blur-[110px] rounded-full animate-blob opacity-20 bg-blue-600"
    >
    </div>
</section>

<script>
    const techContainer = document.querySelectorAll("[data-tech]");
    document
        .querySelector("[data-icon-container]")
        .classList.add("shadow-blue-600");

    techContainer.forEach((button: HTMLElement) => {
        button.addEventListener("click", () => {
            const clickedTechnology = JSON.parse(button.dataset.tech);
            const img = document.getElementById(
                "details-icon",
            ) as HTMLImageElement;
            const techInfoLeftContainer = document.getElementById(
                "tech-info-left-container",
            );

            // Update the image and container styles
            img.src = clickedTechnology.iconRoute;
            img.alt = `${clickedTechnology.name} logo`;
            techInfoLeftContainer.className = `${techInfoLeftContainer.dataset.baseStyles} ${clickedTechnology.classStyles}`;

            // Update the text content
            document.getElementById("tech-info-subtitle").textContent =
                clickedTechnology.subtitle;
            document.getElementById("tech-info-title").textContent =
                clickedTechnology.name;
            document.getElementById("tech-info-description").textContent =
                clickedTechnology.description;

            // Manage active indicators
            document
                .querySelectorAll("[data-circle-active-indicator]")
                .forEach((indicator) => {
                    indicator.classList.add("hidden");
                });
            document
                .querySelectorAll("[data-icon-container]")
                .forEach((indicator) => {
                    indicator.classList.remove("shadow-blue-600");
                });

            const circleActiveIndicator = button.querySelector(
                "[data-circle-active-indicator]",
            );
            const iconContainerActiveIndicator = button.querySelector(
                "[data-icon-container]",
            );
            circleActiveIndicator.classList.remove("hidden");
            circleActiveIndicator.classList.add("absolute");
            iconContainerActiveIndicator.classList.add("shadow-blue-600");
        });
    });
</script>
<style>
    .hide-scroll-bar {
        -ms-overflow-style: none;
        scrollbar-width: none;
    }
    .hide-scroll-bar::-webkit-scrollbar {
        display: none;
    }
</style>
